{{template "admin-base" .}}

{{define "title"}}Profile - GoBlender Admin{{end}}

{{define "admin-title"}}My Profile{{end}}
{{define "content-title"}}My Profile{{end}}

{{define "css"}}
    <style>
        #videoContainer {
            margin: 2em auto 0;
            width: 500px;
            padding: 2em;
            background: white;
            -webkit-box-shadow: 0 1px 10px #D9D9D9;
            -moz-box-shadow: 0 1px 10px #D9D9D9;
            -ms-box-shadow: 0 1px 10px #D9D9D9;
            -o-box-shadow: 0 1px 10px #D9D9D9;
            box-shadow: 0 1px 10px #D9D9D9;
        }

    </style>
{{end}}

{{define "content"}}

    <div class="col">

        <ul class="nav nav-tabs" id="profileTabs" role="tablist">
            <li class="nav-item">
                <a class="nav-link active" id="general-tab" data-toggle="tab" href="#general-tab-content" role="tab"
                   aria-controls="home" aria-selected="true">My Profile</a>
            </li>

            <li class="nav-item">
                <a class="nav-link" id="assignments-tab" data-toggle="tab" href="#assignments-tab-content" role="tab"
                   aria-controls="Logo" aria-selected="false">My Assignments</a>
            </li>

            <li class="nav-item">
                <a class="nav-link" id="progress-tab" data-toggle="tab" href="#progress-tab-content" role="tab"
                   aria-controls="Logo" aria-selected="false">Course Accesses</a>
            </li>

            <li class="nav-item">
                <a class="nav-link" id="chart-tab" data-toggle="tab" href="#chart-tab-content" role="tab"
                   aria-controls="Logo" aria-selected="false">Progress</a>
            </li>

        </ul>


        <div class="tab-content" id="profileTabsContent">
            <div class="tab-pane fade show active" role="tabpanel" aria-labelledby="general-tab"
                 id="general-tab-content">

                <div class="row">
                    <div class="col-md-6 col-xs-12">
                        <form method="post" action="/admin/users/profile" enctype="multipart/form-data" id="userForm"
                              name="userForm" class="needs-validation" novalidate>
                            <input type='hidden' name='csrf_token' value='{{.CSRFToken}}'>

                            {{with .Form.Errors.Get "generic"}}
                                <div class="alert alert-danger" role="alert">{{.}}</div>
                            {{end}}

                            <div class="form-group mt-4">
                                <div class="row">
                                    <div class="col">
                                        <div class="controls">
                                            <label>Profile Image:</label>
                                            <div class="custom-file">
                                                <input type="file" class="custom-file-input" id="avatar" name="avatar">
                                                <label class="custom-file-label" for="customFile">Upload file</label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col text-center d-none d-sm-block">
                                        <div class="controls">
                                            <label>Use Camera:</label>
                                            <p><a href="#!" onclick="openCamera()"><i
                                                            class="fa fa-camera fa-2x "></i></a></p>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <label>First Name:</label>
                                {{with .Form.Errors.Get "first_name"}}
                                    <label class='text-danger'>{{.}}</label>
                                {{end}}
                                <input class="form-control" id="first_name" autocomplete="off" type='text'
                                       name='first_name' required
                                       value='{{.AdminUser.FirstName}}'>
                                <div class="invalid-feedback">
                                    Please enter a value
                                </div>
                            </div>

                            <div class="form-group">
                                <label>Last Name:</label>
                                {{with .Form.Errors.Get "last_name"}}
                                    <label class='text-danger'>{{.}}</label>
                                {{end}}
                                <input class="form-control required" id="last_name" autocomplete="off" type='text'
                                       name='last_name'
                                       value='{{.AdminUser.LastName}}' required>
                                <div class="invalid-feedback">
                                    Please enter a value
                                </div>
                            </div>

                            <div class="form-group">
                                <label>Email Address:</label>
                                {{with .Form.Errors.Get "email"}}
                                    <label class='text-danger'>{{.}}</label>
                                {{end}}
                                <input class="form-control" id="email" autocomplete="off" type='email' name='email'
                                        {{if gt .AdminUser.LoginTypesId 1}}
                                            readonly
                                        {{end}}
                                       value='{{.AdminUser.Email}}'>
                                <div class="invalid-feedback">
                                    Please enter a valid email address
                                </div>
                            </div>

                            {{if eq .AdminUser.LoginTypesId 1}}
                                <div class="mb-4">
                                    <a href="#!" onclick="hideShowPassword()" class="btn btn-outline-secondary">Change
                                        Password</a>
                                </div>


                                <div id="password-div" style="display: none;">
                                    <div class="form-group">
                                        <label>Password:
                                            <small>(Leave blank to keep existing password)</small>
                                        </label>
                                        {{with .Form.Errors.Get "password"}}
                                            <label class='text-danger'>{{.}}</label>
                                        {{end}}
                                        <input class="form-control" id="password" autocomplete="off" type='password'
                                               name='password'
                                               value=''>
                                    </div>

                                    <div class="form-group">
                                        <label>Confirm Password:</label>
                                        {{with .Form.Errors.Get "confirm_password"}}
                                            <label class='text-danger'>{{.}}</label>
                                        {{end}}
                                        <input class="form-control" id="confirm_password" autocomplete="off"
                                               type='password'
                                               name='confirm_password'
                                               value=''>
                                    </div>
                                </div>

                                <div class="form-group">

                                    <div class="custom-control custom-switch">
                                        <input type="checkbox" class="custom-control-input" name="use_tfa" value="1"
                                               id="use_tfa" {{if eq 1 .AdminUser.UseTfa}} checked {{end}}>
                                        <label class="custom-control-label" for="use_tfa">Use Two Factor auth</label>
                                    </div>
                                </div>
                            {{end}}

                            {{if eq .AdminUser.AccessLevel 3}}
                                <div class="form-group">
                                    <div class="custom-control custom-switch">
                                        <input type="checkbox" class="custom-control-input" value="1"
                                               id="advanced_editing" {{if eq (index .Auth.Preferences  "advanced-editing") "1"}} checked {{end}}
                                               onclick="SetAdvancedEditingPref()">
                                        <label class="custom-control-label" for="advanced_editing">Enable advanced
                                            editing
                                            tools</label>
                                    </div>

                                </div>
                            {{end}}

                            <hr>

                            <input type="submit" class="btn btn-primary" value="Save Changes">
                        </form>
                    </div>

                    <div class="col-md-6 col-xs-12">
                        <div id="videoContainer" class="d-none text-center">
                            <video id="camera-stream" width="500" autoplay controls></video>
                            <br>
                            <br>
                            <button class="btn btn-sm btn-primary" id="capture">Capture Image</button>
                            <br>
                            <br>
                            <canvas id="canvas" width=320 height=240></canvas>
                            <br>
                            <br>
                            <button class="btn btn-sm btn-primary d-none" id="useImage">Use this image</button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="tab-pane fade" role="tabpanel" aria-labelledby="assignments-tab" id="assignments-tab-content">
                <h3 class="mt-4">Assignments</h3>

                <div class="table-responsive">
                    <table id="itable" class="table table-striped table-bordered">
                        <thead>
                        <tr>
                            <th>Description</th>
                            <th>Course</th>
                            <th>File Submitted</th>
                            <th>Date Received</th>
                            <th>Grade</th>
                            <th>Download Graded Paper</th>
                        </tr>
                        </thead>
                        <tbody>
                        {{$assignments := index .RowSets "assignments"}}
                        {{$auth := .Auth}}
                        {{range $assignments}}
                            <tr>
                                <td>{{.Description}}</td>
                                <td>{{.Course.CourseName}}</td>
                                <td>Download: <a href="/static/site-content/assignments/{{$auth.ID}}/{{.FileName}}">
                                        {{.FileNameDisplay}}
                                    </a>
                                </td>
                                <td>{{humanDateTime .CreatedAt}}</td>
                                <td>
                                    {{if and (gt .Mark 0) (gt .TotalValue 0)}}
                                        {{.Mark}} / {{.TotalValue}}
                                    {{else}}
                                        Not yet marked
                                    {{end}}
                                </td>
                                <td class="text-center">
                                    {{if ne .GradedFile ""}}
                                        <a href="/admin/sections/assignments/download-graded-for-student/{{.ID}}">
                                            <i class="fa fa-download"></i>
                                        </a>
                                    {{else}}
                                        N/A
                                    {{end}}
                                </td>
                            </tr>
                        {{end}}
                        </tbody>
                    </table>
                </div>

            </div>

            <div class="tab-pane fade" role="tabpanel" aria-labelledby="progress-tab" id="progress-tab-content">
                <h3 class="mt-4">My Course Access History</h3>

                <div class="table-responsive">
                    <table id="progresstable" class="table table-striped table-bordered">
                        <thead>
                        <tr>
                            <th>Course</th>
                            <th>Lecture</th>
                            <th>Date/Time</th>
                            <th>Duration</th>
                        </tr>
                        </thead>
                        <tbody>
                        {{$access := index .RowSets "access"}}
                        {{range $access}}
                            <tr>
                                <td>{{.Course.CourseName}}</td>
                                <td>{{.Lecture.LectureName}}</td>
                                <td>{{humanDateTime .CreatedAt}}</td>
                                <td>{{secondsHuman .Duration}}</td>
                            </tr>
                        {{end}}
                        </tbody>
                    </table>
                </div>

            </div>

            <div class="tab-pane fade" role="tabpanel" aria-labelledby="chart-tab" id="chart-tab-content">
                <h3 class="mt-4">My Progress</h3>

                {{if gt (len (index .RowSets "courses")) 0}}
                    <div class="row">
                        <div class="offset-3 col-md-6">
                            <div class="form-group ">
                                <label for="course_id">Course</label>
                                <select id="course_id" name="active" class="custom-select" onchange="showCourseData()">
                                    {{range (index .RowSets "courses")}}
                                        <option value="{{.ID}}">{{.SectionName}}: {{.Course.CourseName}}
                                            - {{.Term}}</option>
                                    {{end}}
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12 col-xs-12">
                            <canvas id="viewsChart"></canvas>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12 col-xs-12">
                            <canvas id="durationChart"></canvas>
                            <div id="chartjs-tooltip"></div>
                        </div>
                    </div>
                {{end}}
            </div>

        </div>
    </div>


{{end}}

{{define "js"}}
    <script>
        let viewChart;
        let timeChart;

        (function () {
            'use strict';
            window.addEventListener('load', function () {
                var forms = document.getElementsByClassName('needs-validation');
                var validation = Array.prototype.filter.call(forms, function (form) {
                    form.addEventListener('submit', function (event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();

        const supported = 'mediaDevices' in navigator;
        const player = document.getElementById('camera-stream');
        const canvas = document.getElementById('canvas');
        const context = canvas.getContext('2d');
        const captureButton = document.getElementById('capture');

        captureButton.addEventListener('click', () => {
            // Draw the video frame to the canvas.
            context.drawImage(player, 0, 0, canvas.width, canvas.height);
            $("#useImage").removeClass("d-none");
        });

        document.getElementById('useImage').addEventListener('click', function (el) {
            // post frame to server, b64 encoded
            let blob = canvas.toDataURL();
            let fd = new FormData();
            fd.append("avatar", blob);
            fd.append("csrf_token", '{{.CSRFToken}}');
            $.ajax({
                type: "POST",
                enctype: 'multipart/form-data',
                url: "/admin/users/upload-profile-pic",
                data: fd,
                processData: false,
                contentType: false,
                cache: false,
                success: (data) => {
                    window.location.href = '/admin/users/profile';
                },
                error: function (xhr, status, error) {
                    alert(xhr.responseText);
                }
            });
        });

        function openCamera() {
            $("#videoContainer").removeClass("d-none");
            const constraints = {
                video: true,
            };
            navigator.mediaDevices.getUserMedia(constraints)
                .then((stream) => {
                    player.srcObject = stream;
                });
        }

        function SetAdvancedEditingPref() {
            let prefValue = "0";
            if ($("#advanced_editing").prop('checked') === true) {
                prefValue = "1"
            }
            updatePref("advanced-editing", prefValue);
        }

        function hideShowPassword() {
            let el = document.getElementById("password-div");
            slideToggle(el);
        }

        $(document).ready(function () {
            $('a[data-toggle="tab"]').on('show.bs.tab', function (e) {
                localStorage.setItem('activeTab', $(e.target).attr('href'));
            });
            let activeTab = localStorage.getItem('activeTab');
            if (activeTab) {
                $('#profileTabs a[href="' + activeTab + '"]').tab('show');
            }

            if (window.location.hash !== "") {
                $('a[href="' + window.location.hash + '"]').tab('show');
            }
        });

        function showCourse(x) {
            $.ajax({
                url: "/admin/courses/course/ajax/traffic-data-for-student?student_id={{.Auth.ID}}&course_id=" + x,
                method: "GET",
                success: function (data) {
                    var url = [];
                    var views = [];

                    for (let i in data) {
                        url.push(data[i].y);
                        views.push(data[i].views);
                    }

                    var chartdata = {
                        labels: url,
                        datasets: [
                            {
                                label: 'Views',
                                backgroundColor: 'rgba(54, 162, 235, 0.5)',
                                borderColor: 'rgba(54, 162, 235, 0.5)',
                                hoverBackgroundColor: 'rgba(54, 162, 235, 0.5)',
                                hoverBorderColor: 'rgba(54, 162, 235, 0.5)',
                                borderWidth: 1,
                                data: views,
                            }
                        ],
                    };

                    var ctx = document.getElementById("viewsChart").getContext('2d');

                    viewChart = new Chart(ctx, {
                        type: 'horizontalBar',
                        data: chartdata,
                        options: {
                            legend: {
                                display: true,
                                position: 'top',
                            },
                            title: {
                                display: true,
                                text: 'Lecture Views',
                            },
                            scales: {
                                yAxes: [{
                                    ticks: {
                                        beginAtZero: true
                                    }
                                }],
                            },
                        }
                    });
                },
                error: function (data) {
                    console.log(data);
                }
            });

            $.ajax({
                url: "/admin/courses/course/ajax/traffic-data-for-student?student_id={{.Auth.ID}}&course_id=" + x,
                method: "GET",
                success: function (data) {
                    var url = [];
                    var duration = [];
                    var hms = [];

                    for (let i in data) {
                        url.push(data[i].y);
                        duration.push(Math.round(data[i].time / 60));
                    }

                    var chartdata = {
                        labels: url,
                        datasets: [
                            {
                                label: 'Minutes',
                                backgroundColor: 'rgba(255, 99, 132, 0.5)',
                                borderColor: 'rgba(255,99,132,1)',
                                hoverBackgroundColor: 'rgba(255, 99, 132, 0.8)',
                                hoverBorderColor: 'rgba(200, 200, 200, 1)',
                                borderWidth: 1,
                                data: duration,
                            },
                        ],
                    };

                    var ctx = document.getElementById("durationChart").getContext('2d');

                    timeChart = new Chart(ctx, {
                        type: 'horizontalBar',
                        data: chartdata,
                        options: {
                            legend: {
                                display: true,
                                position: 'top',
                            },
                            title: {
                                display: true,
                                text: 'Time spent in lecture',
                            },
                            scales: {
                                yAxes: [{
                                    ticks: {
                                        beginAtZero: true
                                    }
                                }],
                            },
                        }
                    });
                },
                error: function (data) {
                    console.log(data);
                }
            });
        }


        function showCourseData() {
            viewChart.destroy();
            timeChart.destroy();
            showCourse(document.getElementById("course_id").value)
        }

        document.addEventListener("DOMContentLoaded", function () {
            showCourse(document.getElementById("course_id").value)
        });

    </script>
{{end}}