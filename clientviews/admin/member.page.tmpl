{{template "admin-base" .}}

{{define "title"}}Student - GoBlender Admin{{end}}

{{define "admin-title"}}Student: {{.AdminUser.FirstName}} {{.AdminUser.LastName}}{{end}}
{{define "content-title"}}Student: {{.AdminUser.FirstName}} {{.AdminUser.LastName}}{{end}}

{{define "content"}}

    {{if and (hasRole "super" .Auth.ID) (ne .Auth.ID .AdminUser.ID)}}
        <div class="row">
            <div class="col">
                <div class="float-right">
                    <a href="#!" onclick="becomeUser({{.AdminUser.ID}})" class="btn btn-primary">Become this Student</a>
                </div>
                <div class="clearfix mb-2"></div>
            </div>
        </div>
    {{end}}

    <div class="row">
        <div class="col-md-12">

            <ul class="nav nav-tabs" id="studentTabs">
                <li class="nav-item">
                    <a class="nav-link active" id="general-tab" data-toggle="tab" href="#user-tab-content">Student Information</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="activity-tab" href="#access-tab-content" data-toggle="tab">Course Activity</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="assignment-tab" href="#assignments-tab-content" data-toggle="tab">Assignments</a>
                </li>
            </ul>

            <div class="tab-content" id="userTabsContent">
                <div class="tab-pane fade show active" role="tabpanel" aria-labelledby="general-tab"
                     id="user-tab-content">

                    <div class="row">
                        <div class="col-md-6">
                            <h3 class="mt-3">User Information</h3>
                            <hr>
                            <form method="post" action="/admin/members/edit-member" id="userForm"
                                  class="needs-validation" novalidate>
                                <input type='hidden' name='csrf_token' value='{{.CSRFToken}}'>
                                <input type='hidden' name='id' value='{{.AdminUser.ID}}'>


                                {{with .Form.Errors.Get "generic"}}
                                    <div class="alert alert-danger" role="alert">{{.}}</div>
                                {{end}}

                                <div class="form-group">
                                    <label>First Name:</label>
                                    {{with .Form.Errors.Get "first_name"}}
                                        <label class='text-danger'>{{.}}</label>
                                    {{end}}
                                    <input class="form-control" id="first_name" autocomplete="off" type='text'
                                           name='first_name' required
                                           value='{{.AdminUser.FirstName}}'>
                                    <div class="invalid-feedback">
                                        Please enter a value
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label>Last Name:</label>
                                    {{with .Form.Errors.Get "last_name"}}
                                        <label class='text-danger'>{{.}}</label>
                                    {{end}}
                                    <input class="form-control" id="last_name" autocomplete="off" type='text'
                                           name='last_name'
                                           value='{{.AdminUser.LastName}}' required>
                                    <div class="invalid-feedback">
                                        Please enter a value
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label>Email Address:</label>
                                    {{with .Form.Errors.Get "email"}}
                                        <label class='text-danger'>{{.}}</label>
                                    {{end}}
                                    <input class="form-control" id="email" autocomplete="off" type='email' name='email'
                                           value='{{.AdminUser.Email}}' required>
                                    <div class="invalid-feedback">
                                        Please enter a valid email address
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label>Password:
                                        {{if gt .AdminUser.ID 0}}
                                            <small>(Leave blank to keep existing password)</small>
                                        {{end}}
                                    </label>
                                    {{with .Form.Errors.Get "password"}}
                                        <label class='text-danger'>{{.}}</label>
                                    {{end}}
                                    <input class="form-control {{if eq .AdminUser.ID 0}}required{{end}}" id="password"
                                           autocomplete="off" type='password' name='password'
                                            {{if eq .AdminUser.ID 0}}
                                                required
                                            {{end}}
                                           value=''>
                                    <div class="invalid-feedback">
                                        Please enter a value
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label>Confirm Password:</label>
                                    {{with .Form.Errors.Get "confirm_password"}}
                                        <label class='text-danger'>{{.}}</label>
                                    {{end}}
                                    <input class="form-control {{if eq .AdminUser.ID 0}}required{{end}}"
                                           id="confirm_password"
                                           autocomplete="off" type='password'
                                           name='confirm_password'
                                            {{if eq .AdminUser.ID 0}}
                                                required
                                            {{end}}
                                           value=''>
                                    <div class="invalid-feedback">
                                        Please enter the same value again
                                    </div>
                                </div>

                                {{if eq .AdminUser.UseTfa 1}}
                                    <div class="form-group">
                                        <div class="custom-control custom-switch">
                                            <input type="checkbox" class="custom-control-input" name="use_tfa" value="1"
                                                   id="use_tfa" {{if eq .AdminUser.UseTfa 1}} checked {{end}}>
                                            <label class="custom-control-label" for="use_tfa">Use Two Factor
                                                Auth</label>
                                        </div>
                                    </div>
                                {{end}}

                                <div class="form-group">
                                    <label>User Status:</label>
                                    <select class="custom-select" name="user_active"
                                            id="user_active" {{if eq .Auth.ID .AdminUser.ID}} readonly="readonly"{{end}}>
                                        <option value="1" {{if eq .AdminUser.UserActive 1}}selected="selected"{{end}}>
                                            Active
                                        </option>
                                        <option value="0" {{if eq .AdminUser.UserActive 0}}selected="selected"{{end}}>
                                            Inactive
                                        </option>
                                    </select>
                                </div>

                                <div class="form-group">
                                    <label>Access level:</label>
                                    <select class="custom-select" name="access_level"
                                            id="access_level" {{if eq .Auth.ID .AdminUser.ID}} readonly="readonly"{{end}}>
                                        <option value="1" {{if eq .AdminUser.AccessLevel 1}}selected="selected"{{end}}>
                                            Member
                                        </option>
                                        <option value="3" {{if eq .AdminUser.AccessLevel 3}}selected="selected"{{end}}>
                                            Admin
                                        </option>
                                    </select>
                                </div>

                                <hr>

                                <input type="submit" class="btn btn-primary" value="Save Changes">
                                <a class="btn btn-warning" href="/admin/members/all">Cancel</a>

                            </form>

                            {{if and (ne .Auth.ID .AdminUser.ID) (gt .AdminUser.ID 0)}}
                                <hr>
                                <a class="btn btn-danger" href="#!" id="lockout-user">Log this user out and set
                                    inactive</a>
                            {{end}}

                        </div>
                    </div>

                </div>

                <div class="tab-pane fade show" role="tabpanel" aria-labelledby="general-tab"
                     id="access-tab-content">
                    <h3 class="mt-3 mb-2">Access History</h3>
                    <div class="table-responsive">
                        <table id="itable" class="table table-striped table-bordered">
                            <thead>
                            <tr>
                                <th>Course</th>
                                <th>Lecture</th>
                                <th>Date/Time</th>
                                <th>Duration</th>
                            </tr>
                            </thead>
                            <tbody>
                            {{$access := index .RowSets "access"}}
                            {{range $access}}
                                <tr>
                                    <td>{{.Course.CourseName}}</td>
                                    <td>{{.Lecture.LectureName}}</td>
                                    <td>{{humanDateTime .CreatedAt}}</td>
                                    <td>{{secondsHuman .Duration}}</td>
                                </tr>
                            {{end}}
                            </tbody>
                        </table>
                    </div>
                </div>

                <div class="tab-pane fade show" role="tabpanel" aria-labelledby="general-tab"
                     id="assignments-tab-content">
                    <h3 class="mt-3 mb-2">Assignments</h3>
                    <div class="table-responsive">
                        <table id="atable" class="table table-striped table-bordered">
                            <thead>
                            <tr>
                                <th>Description</th>
                                <th>Name</th>
                                <th>Course</th>
                                <th>Date Received</th>
                                <th class="text-center">Processed</th>
                                <th class="text-center">Grade</th>
                            </tr>
                            </thead>
                            <tbody>
                            {{$assignments := index .RowSets "assignments"}}
                            {{$studentID := .AdminUser.ID}}
                            {{range $assignments}}
                                <tr>
                                    <td><a href='/admin/courses/assignment/{{.ID}}?src={{$studentID}}'>{{.Description}}</a></td>
                                    <td>{{.User.FirstName}} {{.User.LastName}}</td>
                                    <td>{{.Course.CourseName}}</td>
                                    <td>{{humanDateTime .CreatedAt}}</td>
                                    <td class="text-center">
                                        {{if eq .Processed 1}}
                                            <span class="badge badge-primary">Processed</span>
                                        {{else}}
                                            <span class="badge badge-danger">Not Processed</span>
                                        {{end}}
                                    </td>
                                    <td class="text-center">
                                        {{if gt .TotalValue 0}}
                                            {{.Mark}}/{{.TotalValue}}
                                        {{else}}
                                            N/A
                                        {{end}}
                                    </td>
                                </tr>
                            {{end}}
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>


{{end}}

{{define "js"}}
    <script>

        (function () {
            'use strict';
            window.addEventListener('load', function () {
                var forms = document.getElementsByClassName('needs-validation');
                var validation = Array.prototype.filter.call(forms, function (form) {
                    form.addEventListener('submit', function (event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();

        $(document).ready(function () {
            $('#itable').DataTable({
                stateSave: true,
                order: [[2, "desc"]],
            });

            $('#atable').DataTable({
                stateSave: true,
                order: [[3, "desc"]],
            });

            $('a[data-toggle="tab"]').on('show.bs.tab', function (e) {
                localStorage.setItem('activeTab', $(e.target).attr('href'));
            });
            let activeTab = localStorage.getItem('activeTab');
            if (activeTab) {
                $('#studentTabs a[href="' + activeTab + '"]').tab('show');
            }
        });

        document.getElementById('lockout-user').addEventListener('click', async function () {
            attention.confirm({
                html: "This will log the user out of all devices, and set the account to inactive. "
                    + "<strong>The user will no longer be able to log in.</strong> Are you sure?",
                showCancelButton: true,
                confirmButtonText: 'Lock User Out',
                icon: 'warning',
                callback: function (result) {
                    if (result !== false) {
                        window.location.href = '/admin/users/security/lock-user-out?id={{.AdminUser.ID}}'
                    }
                }
            })
        });

        let tfaCheckBox = document.getElementById("use_tfa");

        if (tfaCheckBox) {
            tfaCheckBox.addEventListener('click', function () {
                if (tfaCheckBox.checked === false) {
                    attention.confirm({
                        html: "<strong>Note:</strong> This will disable two factor authentication for this user. "
                            + "If you disable two factor auth for this user, he/she will "
                            + "have to set it up on his or her own if they want "
                            + "to re-enable it.",
                        showCancelButton: true,
                        confirmButtonText: 'Disable Two-Factor Auth',
                        icon: 'warning',
                        callback: function (result) {
                            if (result === true) {
                                document.getElementById("use_tfa").checked = false;
                            }
                        }
                    })
                }
            });
        }


        function becomeUser(x) {
            attention.confirm({
                html: "This will log you in as this user in a new window. When you are done, log out as that user. The window will close, and you will then be logged in as yourself again.",
                showCancelButton: true,
                confirmButtonText: 'Become User',
                icon: 'warning',
                callback: function (result) {
                    if (result !== false) {
                        var URL = "/admin/become-user/" + x + "/{{.Auth.ID}}";
                        var win = window.open(URL, "_blank", "");
                    }
                }
            })
        }
    </script>

{{end}}