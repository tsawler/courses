{{template "admin-base" .}}

{{define "title"}}Course - vMaintain Admin{{end}}

{{define "admin-title"}}Course{{end}}
{{define "content-title"}}Course{{end}}
{{define "css"}}
{{end}}

{{define "content"}}
    {{$course := index .RowSets "course"}}
    <form method="post" action="/admin/courses/{{$course.ID}}" novalidate class="needs-validation"
          id="course-form">
        <div class="row">
            <input type="hidden" name="csrf_token" id="csrf_token" value="{{.CSRFToken}}">
            <input type="hidden" name="action" id="action" value="0">
            <input type="hidden" name="sort_list" id="sort-list">

            <div class="col-md-6 col-sm-12 col-xs-12">

                <div class="form-group mt-3">
                    <label for="course_name">Course Name</label>
                    {{with .Form.Errors.Get "course_name"}}
                        <label class='text-danger'>{{.}}</label>
                    {{end}}
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fa fa-font fa-fw"></i></span>
                        </div>
                        <input class="form-control required {{with .Form.Errors.Get "course_name"}} is-invalid {{end}}"
                               id="course_name"
                               required
                               autocomplete="off" type='text'
                               name='course_name'
                               value='{{$course.CourseName}}'>
                        <div class="invalid-feedback">
                            Please enter a value
                        </div>
                    </div>
                </div>

                <div class="form-group ">
                    <label for="active">Active</label>
                    <select id="active" name="active" class="custom-select">
                        <option value="0" {{if eq $course.Active 0}} selected {{end}}>No</option>
                        <option value="1" {{if eq $course.Active 1}} selected {{end}}>Yes</option>
                    </select>
                </div>

                {{if gt $course.ID 0}}
                    <hr>
                    <div class="float-left">
                        <h3>Lectures</h3>
                    </div>
                    <div class="float-right">
                        <a class="btn btn-outline-secondary" href="/admin/courses/lecture/{{$course.ID}}/0">Add
                            Lecture</a>
                    </div>
                    <div class="clearfix"></div>

                    <div class="list-group mt-3" id="lecture-list">
                        {{range $course.Lectures}}
                            <a class="list-group-item list-group-item-action"
                               data-id="{{.ID}}"
                               id="sort_{{.ID}}"
                                    {{if eq .Active 0}}
                                        style="background: lightgrey; border: 1px solid white"
                                    {{else}}
                                        style="background: #c1f9b7; border: 1px solid white;"
                                    {{end}}
                               href="/admin/courses/lecture/{{$course.ID}}/{{.ID}}">
                                {{if eq .Active 1}}
                                    {{.LectureName}}
                                {{else}}
                                    <em>{{.LectureName}} (inactive)</em>
                                {{end}}
                            </a>
                        {{end}}
                    </div>
                    <div>&nbsp;</div>
                {{end}}
            </div>

            <div class="col-md-6 col-xs-12">

                <div class="form-group mt-3">
                    <label for="prof_name">Professor's Name</label>
                    {{with .Form.Errors.Get "prof_name"}}
                        <label class='text-danger'>{{.}}</label>
                    {{end}}
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fa fa-user fa-fw"></i></span>
                        </div>
                        <input class="form-control required {{with .Form.Errors.Get "prof_name"}} is-invalid {{end}}"
                               id="prof_name"
                               required
                               autocomplete="off" type='text'
                               name='prof_name'
                               value='{{$course.ProfName}}'>
                        <div class="invalid-feedback">
                            Please enter a value
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <label for="course_name">Professor's Email</label>
                    {{with .Form.Errors.Get "prof_email"}}
                        <label class='text-danger'>{{.}}</label>
                    {{end}}
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fa fa-envelope fa-fw"></i></span>
                        </div>
                        <input class="form-control required {{with .Form.Errors.Get "prof_email"}} is-invalid {{end}}"
                               id="prof_email"
                               required
                               autocomplete="off" type='email'
                               name='prof_email'
                               value='{{$course.ProfEmail}}'>
                        <div class="invalid-feedback">
                            Please enter a valid email address
                        </div>
                    </div>
                </div>

                <div class="form-group mt-3">
                    <label for="teams_link">MS Teams Link</label>
                    {{with .Form.Errors.Get "prof_name"}}
                        <label class='text-danger'>{{.}}</label>
                    {{end}}
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="fa fa-link fa-fw"></i></span>
                        </div>
                        <input class="form-control required {{with .Form.Errors.Get "teams_link"}} is-invalid {{end}}"
                               id="teams_link"
                               autocomplete="off" type='text'
                               name='teams_link'
                               value='{{$course.TeamsLink}}'>
                        <div class="invalid-feedback">
                            Please enter a value
                        </div>
                    </div>
                </div>

                <div>
                    <a class="btn btn-outline-secondary" href="/admin/courses/{{$course.ID}}/accesses">View Student Access History</a>
                </div>
            </div>

        </div>
        <div class="row">
            <div class="col">
                <hr>


                <div class="btn-group dropup">
                    <a class="btn btn-primary savebtn" href="#!" onclick="saveClose()" data-action="close">
                        Save and Close
                    </a>
                    <button type="button" class="btn btn-primary dropdown-toggle dropdown-toggle-split"
                            data-toggle="dropdown"
                            aria-haspopup="true" aria-expanded="false">
                        <span class="sr-only">Toggle Dropdown</span>
                    </button>
                    <div class="dropdown-menu">
                        <a class="dropdown-item" href="#!" onclick="val()">Save &amp; Continue</a>
                    </div>
                </div>


                <a class="btn btn-info"
                   href="/admin/courses/all">Cancel</a>

            </div>
        </div>
    </form>

{{end}}

{{define "js"}}
    <script>
        let lectureList;
        let lectures;

        document.addEventListener("DOMContentLoaded", function () {
            lectures = document.getElementById('lecture-list');
            sortLectures();
            performSort();
        });

        function saveClose() {
            document.getElementById("action").value = "1";
            val();
        }

        function val() {
            let form = document.getElementById("course-form");
            if (form.checkValidity() === false) {
                this.event.preventDefault();
                this.event.stopPropagation();
                form.classList.add("was-validated");
                return
            }
            form.classList.add("was-validated");
            form.submit();
        }


        function sortLectures() {
            componentList = Sortable.create(lectures, {
                animation: 150,
                chosenClass: 'sortable-chosen',
                onUpdate: function (event) {
                    performSort();
                },
                onAdd: function (event) {
                    performSort();
                },
                onRemove: function (event) {
                    performSort();
                }
            });
        }

        {{$course := index .RowSets "course"}}
        function performSort() {
            let items = componentList.toArray();
            let obj = [];
            for (let i = 0; i < items.length; i++) {
                obj.push({id: items[i], order: (i + 1)});
            }
            document.getElementById("sort-list").value = JSON.stringify(obj);
            console.log("performing sort");
            let fd = new FormData();
            fd.append("csrf_token", "{{.CSRFToken}}");
            fd.append("sort_list", document.getElementById("sort-list").value);
            {{/*fd.append("course_id", {{$course.ID}});*/}}

            fetch("/admin/courses/ajax/save-lecture-sort-order", {
                method: 'POST',
                body: fd,
            })
                .then((response) => {
                    return response.json();
                })
                .then((response) => {
                    console.log(response.ok);
                });
        }

    </script>
{{end}}